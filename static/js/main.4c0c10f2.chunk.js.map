{"version":3,"sources":["logo.svg","Feature.js","ColorSelector.js","Steps.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Feature","props","src","this","image","className","id","style","React","Component","ColorSelector","drivers","name","cases","driver","colors","filter","state","map","color","key","class","onClick","setState","box","Steps","step","onClickBack","console","log","onClickNext","App","currentState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c0c10f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react'\nimport './Feature.css'\n\nclass Feature extends React.Component {\n    constructor(props){\n        super(props)\n        \n        \n    }\n\n   \n    render(){\n        return( \n           \n                <img src={this.props.image} className=\"image\" id=\"case\" style = {this.props.style}></img>\n\n      \n            \n            )\n    }\n\n \n}\nexport default Feature;","import React from 'react';\nimport './ColorSelector.css';\nimport Feature from './Feature.js'\n\n\nclass ColorSelector extends React.Component{\n    constructor(props){\n        super(props)\n        this.drivers = [\n            {\n                name: \"Three Drivers\",\n                image: \"tall_driver.svg\", \n            },\n            {\n                name: \"Two Drivers\",\n                image: \"classic_driver.svg\", \n            },\n            {\n                name: \"Compact Drivers\",\n                image: \"compact_driver.svg\", \n            },\n            {\n                name: \"Sub Driver\",\n                image: \"sub_driver.svg\", \n            },\n        ]\n        this.cases = [\n                        {\n                            name: \"Tall Style\",\n                            image: \"tall_case.svg\",\n                            driver:  \"tall_driver.svg\",\n                        },\n                        {\n                            name: \"Classic Style\",\n                            image: \"monitor_case.svg\", \n                            driver:  \"classic_driver.svg\",\n                        },\n                        {\n                            name: \"Compact Style\",\n                            image: \"tiny_case.svg\", \n                            driver:  \"compact_driver.svg\",\n                        },\n                        {\n                            name: \"SubWoofer Style\",\n                            image: \"sub_case.svg\", \n                            driver:  \"sub_driver.svg\",\n                        },\n                    ]\n        this.colors = [\n            {\n                name: \"Sky\",\n                filter: \"invert(51%) sepia(44%) saturate(5862%) hue-rotate(203deg) brightness(104%) contrast(92%)\",\n            },\n            {\n                name: \"Sunset\",\n                filter: \"invert(63%) sepia(95%) saturate(3465%) hue-rotate(8deg) brightness(109%) contrast(82%)\",\n            },\n            {\n                name: \"Pine\",\n                filter: \"invert(43%) sepia(99%) saturate(668%) hue-rotate(83deg) brightness(92%) contrast(93%)\",\n            },\n            {\n                name: \"Artic\",\n                filter: \"invert(95%) sepia(7%) saturate(346%) hue-rotate(325deg) brightness(104%) contrast(92%)\",\n            },\n            {\n                name: \"Crimson\",\n                filter: \"invert(11%) sepia(88%) saturate(2932%) hue-rotate(350deg) brightness(94%) contrast(107%)\",\n            },\n            {\n                name: \"Orchid\",\n                filter: \"invert(9%) sepia(93%) saturate(4412%) hue-rotate(295deg) brightness(100%) contrast(97%)\",\n            },\n            {\n                name: \"Butter\",\n                filter: \"invert(97%) sepia(57%) saturate(5429%) hue-rotate(323deg) brightness(90%) contrast(90%)\",\n            },\n            {\n                name: \"Lapis\",\n                filter: \"invert(25%) sepia(80%) saturate(1919%) hue-rotate(220deg) brightness(100%) contrast(88%)\",\n            },\n            {\n                name: \"Wood\",\n                filter: \"invert(38%) sepia(8%) saturate(1957%) hue-rotate(350deg) brightness(88%) contrast(95%)\",\n            },\n        ]\n        this.state = {\n            style: {\n                filter: \"invert(67%) sepia(40%) saturate(5895%) hue-rotate(354deg) brightness(90%) contrast(87%)\"\n            },\n            image: this.cases[0].image,\n            driver: this.cases[0].driver\n        }\n    }\n    render(){\n        return(<div id=\"color-palette\">\n            \n            <div>\n                {this.colors.map((color,key) => {\n                    return (<button id={key} class=\"palette\" onClick={() => {this.setState({style: {filter: color.filter}})}}>\n                                <div className=\"color-plate\" style={color} ></div>\n                                <hr></hr>\n                                <div>{color.name}</div>\n                            </button>)\n                })}\n            </div>\n            \n            \n            <Feature image={this.props.state === 0 ? this.state.image: this.state.driver} style = {this.state.style}/>\n            \n            <div>\n                {this.cases.map((box,key) => {\n                    return(<button class=\"case-button-palette\" onClick={() => {this.setState({image: box.image, driver: box.driver})}}>\n                                <div className=\"case-plate\" ><img className=\"thumbnail\" src={box.image}></img></div>\n                                <hr></hr>\n                                <div>{box.name}</div>\n                            </button>)\n                })}\n            </div>\n\n            <br></br>\n        </div>\n        )\n    }\n\n    changeColor(id,color){\n        this.setState(\n            {\n                style: {\n                    filter: color\n                }\n            }\n           \n            \n        )\n    }\n}\n\nexport default ColorSelector;\n\n","import React from 'react';\nimport './Steps.css'\nclass Steps extends React.Component {\n    constructor(props){\n        super(props)\n        this.step = [\n            {name: \"Case\"},\n            {name: \"Drivers\"},\n            {name: \"Addons\"}\n            ]\n        this.state = {\n            step: this.step[0].name\n        }\n    }\n    render(){\n        return(<div className=\"all-steps\">\n            <button onClick={this.props.onClickBack} className=\"steps-button\">\n                <h2>Previous</h2>\n            </button>\n            <button className=\"steps\">\n                <h2>{\"Choose Your \" + this.step[this.props.state].name }</h2>\n            </button>\n                {console.log(this.props.state)}\n            <button onClick = {this.props.onClickNext } className=\"steps-button\">\n                <h2>Next</h2>\n            </button>\n            </div>)\n    }\n}\n\nexport default Steps;","import React from 'react';\nimport logo from './logo.svg';\nimport Feature from './Feature.js'\nimport './App.css';\nimport ColorSelector from './ColorSelector';\nimport Steps from './Steps.js'\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      currentState: 0\n    }\n  }\n  render (){return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div ><img  className=\"banner\"></img></div>\n          <h1> Speaker Audio System Design </h1>\n          <div className=\"cases-view\">\n            <Steps onClickNext={()=>{\n\n              {\n                this.state.currentState != 2 ? this.setState({currentState: this.state.currentState + 1}) : this.setState({currentState: this.state.currentState})\n              }\n            }}\n            onClickBack={() => {\n              {this.state.currentState != 0 ? this.setState({currentState: this.state.currentState - 1}) : this.setState({currentState: this.state.currentState})}\n            }} \n            state = {this.state.currentState}\n            />\n            <hr></hr>\n            <ColorSelector state = {this.state.currentState}/>\n            \n          </div>\n          \n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}